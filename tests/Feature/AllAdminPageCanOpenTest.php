<?php

namespace Tests\Feature;

use App\Http\Livewire\Admin\TagCRUD;
use App\Models\Post;
use App\Models\User;
use App\Models\Works;
use Auth;
use Tests\TestCase;

class AllAdminPageCanOpenTest extends TestCase
{
    public function test_can_redirect_to_home()
    {
        Auth::loginUsingId(1);

        $response = $this->get('/login');

        $response->assertRedirect(route('admin.home'));
    }

    public function test_can_go_post_page()
    {
        Auth::loginUsingId(1);

        $res = $this->get(route('admin.posts.index'));

        $res->assertOk()
            ->assertSeeInOrder(['Create Post', 'Title', 'Status']);
    }

    public function test_can_go_post_create_page()
    {
        Auth::loginUsingId(1);

        $res = $this->get(route('admin.posts.create'));

        $res->assertOk()
            ->assertSeeInOrder(['Title', 'Tags', 'Status', 'Content', 'Submit']);
    }

    public function test_can_go_post_detail_page()
    {
        Auth::loginUsingId(1);
        $post = Post::first();
        $res = $this->get(route('admin.posts.show', $post));

        $res->assertOk()
            ->assertSeeInOrder([
                'Title', $post->title,
                'Status', $post->status, 'Tags',
                'Created at', $post->created_at,
                'Updated at', $post->updated_at,
            ])
            ->assertSeeInOrder($post->tags->pluck('name')->toArray());
    }

    public function test_can_go_post_edit_page()
    {
        Auth::loginUsingId(1);
        $post = Post::first();
        $res = $this->get(route('admin.posts.edit', $post));

        $res->assertOk()
            ->assertSeeInOrder([
                'Title',
                'Tags',
                'Status', $post->status,
                'Content', 'Submit',
            ])
            ->assertSeeInOrder($post->tags->pluck('name')->toArray());
    }

    public function test_can_go_work_page()
    {
        Auth::loginUsingId(1);

        $res = $this->get(route('admin.works.index'));

        $res->assertOk()
            ->assertSeeInOrder(['Create Work', 'Title', 'Description', 'Status']);
    }

    public function test_can_go_work_create_page()
    {
        Auth::loginUsingId(1);

        $res = $this->get(route('admin.works.create'));

        $res->assertOk()
            ->assertSeeInOrder(['Name', 'Tags', 'Project URL', 'Project Repo', 'Picture', 'Status', 'Description (English)', 'Description (Chinese)', 'Submit']);
    }

    public function test_can_go_work_detail_page()
    {
        Auth::loginUsingId(1);
        $work = Works::first();
        $res = $this->get(route('admin.works.show', $work));

        $res->assertOk()
            ->assertSeeInOrder([
                'Name', $work->name,
                'Image', 'Description',
                'Project URL', $work->url,
                'Project Repo', $work->github_url,
                'Tags',
            ])
            ->assertSeeInOrder($work->tags->pluck('name')->toArray());
    }

    public function test_can_go_work_edit_page()
    {
        Auth::loginUsingId(1);
        $work = Works::first();
        $res = $this->get(route('admin.works.edit', $work));

        $res->assertOk()
            ->assertSeeInOrder([
                'Name', $work->name,
                'Tags',
                'Project URL', $work->url,
                'Project Repo', $work->github_url,
                'Status',
                'Description (English)',
                'Description (Chinese)',
                'Submit',
            ])
            ->assertSeeInOrder($work->tags->pluck('name')->toArray());
    }

    public function test_can_go_comments_page()
    {
        Auth::loginUsingId(1);

        $res = $this->get(route('admin.comment.index'));

        $res->assertOk()
            ->assertSeeInOrder(['Name', 'Comment', 'Post']);
    }

    public function test_can_go_tag_page()
    {
        Auth::loginUsingId(1);

        $res = $this->get(route('admin.tags.index'));

        $res->assertOk()
            ->assertSeeInOrder(['Create Tag', 'Title'])
            ->assertSeeLivewire(TagCRUD::class);
    }

    public function test_can_go_edit_profile_page()
    {
        $user = User::first();
        Auth::loginUsingId(1);
        $res = $this->get(route('admin.user.editPassword', 1));

        $res->assertOk()
            ->assertSeeInOrder(['Name', $user->name, 'Password', 'Confirm Password', 'Submit']);
    }

    public function test_can_go_schedule_page()
    {
        Auth::loginUsingId(1);

        $res = $this->get(route('admin.scheduleConfig.index'));

        $res->assertOk();
    }
}
